"""
–ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ –∏–∑ –∫—É—Ä—Å–∞ –±–∏–æ–ª–æ–≥–∏–∏, –î–ù–ö –∏ –†–ù–ö ‚Äì –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∫–ª–µ–æ—Ç–∏–¥–æ–≤.

–ß–µ—Ç—ã—Ä–µ –Ω—É–∫–ª–µ–æ—Ç–∏–¥–∞ –≤ –î–ù–ö:

–∞–¥–µ–Ω–∏–Ω (A);
—Ü–∏—Ç–æ–∑–∏–Ω (C);
–≥—É–∞–Ω–∏–Ω (G);
—Ç–∏–º–∏–Ω (T).
–ß–µ—Ç—ã—Ä–µ –Ω—É–∫–ª–µ–æ—Ç–∏–¥–∞ –≤ –†–ù–ö:

–∞–¥–µ–Ω–∏–Ω (A);
—Ü–∏—Ç–æ–∑–∏–Ω (C);
–≥—É–∞–Ω–∏–Ω (G);
—É—Ä–∞—Ü–∏–ª (U).
–¶–µ–ø—å –†–ù–ö —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–µ–ø–∏ –î–ù–ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º –∫–æ–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã—Ö –Ω—É–∫–ª–µ–æ—Ç–∏–¥–æ–≤:
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –ø–µ—Ä–µ–≤–æ–¥—è—â—É—é —Ü–µ–ø—å –î–ù–ö –≤ —Ü–µ–ø—å –†–ù–ö.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–ø—å –î–ù–ö –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–µ–ø—å –†–ù–ö –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
"""

DNA_RNA = {"G": "C", "C": "G", "T": "A", "A": "U"}
print(*[DNA_RNA[e] for e in input()], sep="")


"""–ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä
–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Å–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–æ–±–µ–ª–∞. –°–ª–æ–≤–æ–º —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—É–∫–≤,
—Å–ª–æ–≤–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏.

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –æ–ø—Ä–µ–¥–µ–ª—è—é—â—É—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç –∏–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ–π —Ñ–æ—Ä–º–µ, —Å
—É—á–µ—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞. –î–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å–ª–æ–≤–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–µ–¥–µ—Ç 1, –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–æ–≥–æ –∂–µ —Å–ª–æ–≤–∞ ‚Äî 2 –∏ —Ç. –¥."""

t, s = {}, []
for c in input().split():
    if c not in t:
        s.append(1)
    else:
        s.append(t[c] + 1)
    t[c] = t.get(c, 0) + 1
print(*s)


"""Scrabble game
–í –∏–≥—Ä–µ Scrabble –∫–∞–∂–¥–∞—è –±—É–∫–≤–∞ –ø—Ä–∏–Ω–æ—Å–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤. –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–ª–æ–≤–∞ ‚Äì —Å—É–º–º–∞ –±–∞–ª–ª–æ–≤ –µ–≥–æ –±—É–∫–≤.
–ß–µ–º —Ä–µ–∂–µ –±—É–∫–≤–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è, —Ç–µ–º –±–æ–ª—å—à–µ –æ–Ω–∞ —Ü–µ–Ω–∏—Ç—Å—è:

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ–¥—Å—á–µ—Ç–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞."""

d = {1: "AEILNORSTU", 2: "DG", 3: "BCMP", 4: "FHVWY", 5: "K", 8: "JX", 10: "QZ"}

print(sum([k for i in input() for k, v in d.items() if i in v]))


"""–°—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
–°—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ (query string) ‚Äî —á–∞—Å—Ç—å URL –∞–¥—Ä–µ—Å–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –∫–ª—é—á–∏ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è. –û–Ω–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ
–≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –∏ –∏–¥–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –∞–¥—Ä–µ—Å–∞. –ù–∞–ø—Ä–∏–º–µ—Ä:

https://beegeek.ru?name=timur     # —Å—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: name=timur
–ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –æ–Ω–∏ –æ—Ç–¥–µ–ª—è—é—Ç—Å—è —Å–∏–º–≤–æ–ª–æ–º –∞–º–ø–µ—Ä—Å–∞–Ω–¥–∞ &:

https://beegeek.ru?name=timur&color=green     # —Å—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: name=timur&color=green
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é build_query_string(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∑–∞–ø—Ä–æ—Å–∞,
—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–∑ —ç—Ç–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤."""


def build_query_string(params):
    return "&".join([k + "=" + str(v) for k, v in sorted(params.items())])


"""–°–ª–∏—è–Ω–∏–µ —Å–ª–æ–≤–∞—Ä–µ–π üå∂Ô∏è
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é merge(), –æ–±—ä–µ–¥–∏–Ω—è—é—â—É—é —Å–ª–æ–≤–∞—Ä–∏ –≤ –æ–¥–∏–Ω –æ–±—â–∏–π. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å
—Å–ª–æ–≤–∞—Ä—å, –∫–∞–∂–¥—ã–π –∫–ª—é—á –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ (—Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö set) —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –∏–∑ –≤—Å–µ—Ö —Å–ª–æ–≤–∞—Ä–µ–π
–ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞."""


def merge(values):  # values - —ç—Ç–æ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π
    res = {}
    for d in values:
        for k, v in d.items():
            res[k] = res.get(k, set())
            res[k].add(v)
    return res


"""–û–ø–∞—Å–Ω—ã–π –≤–∏—Ä—É—Å üòà
–í —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞ –Ω–∞—à–∞ ‚ù§Ô∏è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ Stepik, –ø—Ä–æ–Ω–∏–∫ –æ–ø–∞—Å–Ω—ã–π –≤–∏—Ä—É—Å –∏ —Å–ª–æ–º–∞–ª –∫–æ–Ω—Ç—Ä–æ–ª—å
–ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º. –ì–æ–≤–æ—Ä—è—Ç, –≤–∏—Ä—É—Å –Ω–∞–ø–∏—Å–∞–ª –æ–¥–∏–Ω –∏–∑ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∫—É—Ä—Å–∞ Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö.

–î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–∑–≤–µ—Å—Ç–Ω–æ, —Å –∫–∞–∫–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –º–æ–∂–Ω–æ –∫ –Ω–µ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è:

–∑–∞–ø–∏—Å—å W (write, –¥–æ—Å—Ç—É–ø –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª);
—á—Ç–µ–Ω–∏–µ R (read, –¥–æ—Å—Ç—É–ø –Ω–∞ —á—Ç–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞);
–∑–∞–ø—É—Å–∫ X (execute, –∑–∞–ø—É—Å–∫ –Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞).
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º. –í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–æ–ª–∂–Ω–∞ –±—É–¥–µ—Ç
–≤–æ–∑–≤—Ä–∞—â–∞—Ç—å OK –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è, –∏ Access denied, –µ—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞."""

# put your python code here
file = {}
for _ in range(int(input())):
    s = input().split()
    file[s[0]] = "".join(s[1:])

decoding = {"write": "W", "execute": "X", "read": "R"}
for _ in range(int(input())):
    s = input().split()
    if decoding[s[0]] in file[s[1]]:
        print("OK")
    else:
        print("Access denied")


"""–ü–æ–∫—É–ø–∫–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ üå∂Ô∏è
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –µ–¥–∏–Ω–∏—Ü –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º
–∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞."""

# put your python code here
customer = {}
for _ in range(int(input())):
    n, i, c = input().split()
    if n not in customer:
        customer[n] = customer.setdefault(n, {i: int(c)})
    elif i not in customer[n].keys():
        customer[n][i] = int(c)
    elif i in customer[n].keys():
        customer[n][i] += int(c)

for n in sorted(customer):
    print(n + ":")
    print(*sorted(i + " " + str(c) for i, c in customer[n].items()), sep="\n")
