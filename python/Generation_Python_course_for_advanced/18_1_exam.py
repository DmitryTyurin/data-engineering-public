# Количество строк в файле
# На вход программе подается строка текста с именем текстового файла. Напишите программу для вывода на экран количества
# строк данного файла.

with open(input(), "r", encoding="utf-8") as file:
    print(len(file.readlines()))


# Суммарная стоимость
# Вам доступен текстовый файл ledger.txt с данными о продажах фирмы за месяц. На каждой строке файла указано, сколько
# клиент заплатил за товар, в долларах (целое число):
#
# $47
# $100
# $60
# $12
# $8
# ...
# Напишите программу для подсчета суммарной месячной выручки фирмы.

with open("ledger.txt", "r", encoding="utf-8") as file:
    print(f"${sum(int(line[1:]) for line in file.readlines())}")


# Goooood students
# Вам доступен текстовый файл grades.txt, содержащий оценки студента за три теста в каждом из триместров. Строки файла
# имеют вид: фамилия оценка_1 оценка_2 оценка_3.
#
# Напишите программу для подсчета количества студентов, сдавших все три теста. Тест считается сданным, если количество
# баллов по нему не меньше 65.

counter = 0
with open("grades.txt", "r", encoding="utf-8") as file:
    for line in file.readlines():
        student = line.split()
        if all(map(lambda g: True if int(g) >= 65 else False, student[1:])):
            counter += 1
print(counter)


# Самое длинное слово в файле
# Вам доступен текстовый файл words.txt со словами, разделенными пробелом. Напишите программу, которая находит и
# выводит самые длинные слова этого файла, не меняя порядка их следования.

with open("words.txt", "r", encoding="utf-8") as file:
    words = file.read().split()
    max_len = max(map(lambda s: len(s), words))
    print(*[word for word in words if len(word) == max_len], sep="\n")


# Tail of a File
# На вход программе подается строка текста с именем текстового файла. Напишите программу, выводящую на экран последние
# 10 строк данного файла.

with open(input(), "r", encoding="utf-8") as file:
    text = file.readlines()[-10:]
    for line in text:
        print(line, end="")


# Forbidden words 🌶️
# На вход программе подается строка текста с именем текстового файла. Напишите программу, выводящую на экран содержимое
# этого файла, но с заменой всех запрещенных слов звездочками * (количество звездочек равно количеству букв в слове).
#
# Запрещенные слова, разделенные символом пробела, хранятся в текстовом файле forbidden_words.txt. Гарантируется, что
# все слова в этом файле записаны в нижнем регистре.

with open(input(), "r", encoding="utf-8") as file, open(
    "forbidden_words.txt", "r", encoding="utf-8"
) as forbidden:
    check = forbidden.readline().split()
    for line in file:
        s = line
        sl = line.lower()
        res = ""

        for word in check:
            if word in sl:
                sl = sl.replace(word, "*" * len(word))

        for i in range(len(sl)):
            res += s[i] if sl[i] != "*" else "*"

        print(res, end="")


# Транслитерация 🌶️
# Транслитерация — передача знаков одной письменности знаками другой письменности, при которой каждый знак (или
# последовательность знаков) одной системы письма передаётся соответствующим знаком (или последовательностью знаков)
# другой системы письма.
#
# Вам доступен текстовый файл cyrillic.txt, содержащий текст. Напишите программу для транслитерации этого файла, то
# есть замены кириллических символов на латинские в соответствии с предложенной таблицей. Все остальные символы надо
# оставить без изменений. Результат транслитерации требуется записать в файл transliteration.txt.

symbols = {
    "а": "a",
    "к": "k",
    "х": "h",
    "б": "b",
    "л": "l",
    "ц": "c",
    "в": "v",
    "м": "m",
    "ч": "ch",
    "г": "g",
    "н": "n",
    "ш": "sh",
    "д": "d",
    "о": "o",
    "щ": "shh",
    "е": "e",
    "п": "p",
    "ъ": "*",
    "ё": "jo",
    "р": "r",
    "ы": "y",
    "ж": "zh",
    "с": "s",
    "ь": "'",
    "з": "z",
    "т": "t",
    "э": "je",
    "и": "i",
    "у": "u",
    "ю": "ju",
    "й": "j",
    "ф": "f",
    "я": "ya",
}

with open("cyrillic.txt", "r", encoding="utf-8") as file, open(
    "transliteration.txt", "w", encoding="utf-8"
) as output:

    text = file.readlines()

    for line in text:
        s = ""
        for c in line:
            if c.isalpha() and c.lower() in symbols.keys():
                s += symbols[c] if c == c.lower() else symbols[c.lower()].capitalize()
            else:
                s += c

        print(s, end="", file=output)


# Пропущенные комменты 🌶️
# При написании собственных функций рекомендуется в комментарии описывать назначение функции, ее параметры и
# возвращаемое значение. Часто программисты откладывают написание таких комментариев напоследок, а потом и вовсе
# забывают о них 😂.
#
# На вход программе подается строка текста с именем текстового файла, в котором написан код на языке Python. Напишите
# программу, выводящую на экран имена всех функций для которых отсутствует поясняющий комментарий. Будем считать, что
# любая строка, начинающаяся со слова def и пробела, является началом определения функции. Функция содержит
# комментарий, если первый символ предыдущей строки - #.

with open(input(), "r", encoding="utf-8") as file:
    code = file.readlines()
    res = []

    for i in range(len(code)):
        s = code[i]
        if (s[:3] == "def") and ((i > 0 and code[i - 1][0] != "#") or i == 0):
            res.append(s[s.find(" ") + 1 : s.find("(")])

    if len(res) > 0:
        print(*res, sep="\n")
    else:
        print("Best Programming Team")
